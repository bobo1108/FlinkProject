#是否从头消费Kafka中的数据，这里设置是便于测试
kafka.consumerdata.fromearliest = "true"

#kafka 集群
kafka.cluster = "hadoop102:9092,hadoop103:9092,hadoop104:9092"

#kafka ODS层业务数据库 topic
kafka.db.topic = "ODS_DB_BUSSINESS_DATA"
#kafka ODS层用户日志 topic
kafka.userlog.topic = "ODS_LOG_USERLOG"

#Kafka DWD层 用户点播歌曲日志数据
kafka.userplaysong.topic = "DWD_SONG_PLAY_INFO_RT"
#Kafka DWD层 用户登录上报经纬度位置信息日志数据
kafka.userloginlocationinfo.topic = "DWD_USER_LOGIN_LOCATION_INFO_RT"
#Kafka DWD层 非用户点播歌曲其他日志数据
kafka.otheruserlog.topic = "DWD_OTHER_USERLOG_RT"
#Kafka DWD层 用户在机器消费订单数据
kafka.machine.consumer.detail.rt.topic = "DWD_MACHINE_CONSUMER_DETAIL_RT"

#Kafka DWD层存入维度数据的topic
kafka.dim.topic = "DWD_DIM_INFO_RT"



#Kafka DWS层存入用户点播歌曲宽表数据topic
kafka.dws.userplaysong.wide.topic = "DWS_SONG_PLAY_INFO_WIDE_RT"
#Kafka DWS层存入用户登录位置信息宽表topic
kafka.dws.userloginlocationinfo.wide.topic = "DWS_USER_LOGIN_LOCATION_INFO_WIDE_RT"
#Kakfa DWS层存入机器订单详细信息宽表topic
kafka.dws.machine.consumer.detail.wide.topic = "DWS_MACHINE_CONSUMER_DETAIL_WIDE_RT"

#HBase中维度表
#HBase中歌曲基本信息维度表数据
hbase.dim.song = "DIM_SONG"
hbase.dim.machine.admin.map = "DIM_MACHINE_ADMIN_MAP"
hbase.dim.machine.local.info = "DIM_MACHINE_LOCAL_INFO"



# 读取表配置的mysql url
mysql.url = "jdbc:mysql://hadoop104:3306/rt_songdb?useUnicode=true&characterEncoding=UTF-8"
#mysql登录账号
mysql.user = "root"
#mysql登录账号密码
mysql.password = "123"

# phoenix url
phoenix.url = "jdbc:phoenix:hadoop102,hadoop103,hadoop104:2181"


#redis host -redis 节点
redis.host = "hadoop102"
#redis port -redis的端口
redis.port = "6379"
#result redis db -结果存放在Redis中的库
redis.db = "8"

#clickhouse 驱动
clickhouse.driver = "ru.yandex.clickhouse.ClickHouseDriver"
clickhouse.url = "jdbc:clickhouse://hadoop104:8123/default"

clickhouse.table.songplayhot = "dm_songplay_hots"
clickhouse.table.userloginlocinfort = "dm_user_login_loc_info_rts"
clickhouse.table.orderinfort = "dm_order_info_rts"

